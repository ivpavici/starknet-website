id: 1dd72e46-c830-4a44-9bdf-d62b195b4c98
title: Glossary
template: content
parent_page: /learn/
breadcrumbs: true
page_last_updated: true
blocks:
  - type: page_header
    title: Glossary
    description: A list of common terms used in the Starknet ecosystem
  - type: ordered_block
    blocks:
      - type: ordered_item
        Title: Zero knowledge
        body: Our approach to building this sequencer is the same approach that guided
          us in StarkNet Alpha. The sequencer **will be implemented in stages**,
          and we are sharing today its first module. Over time, new components
          of the sequencer will be completed, until eventually a Rust-based
          sequencer will replace the current Python-based sequencer entirely.
        title: Zero knowledge proofs
      - type: ordered_item
        Title: B is what this begins with
        body: Our approach to building this sequencer is the same approach that guided
          us in StarkNet Alpha. The sequencer **will be implemented in stages**,
          and we are sharing today its first module. Over time, new components
          of the sequencer will be completed, until eventually a Rust-based
          sequencer will replace the current Python-based sequencer entirely.
        title: Best
      - type: ordered_item
        Title: A Shiny New Sequencer
        body: Starknet’s state transition, the StarkNet OS, can make use of SHARP.
          Namely, proving StarkNet’s state transition can be done together with
          a bunch of programs that are unrelated to StarkNet, lowering the
          marginal cost of each participant. Whether or not it is worthwhile for
          StarkNet to use SHARP or have a dedicated prover depends on several
          parameters, most prominently the TPS (transactions per second). Large
          executions might not benefit too much by sharing the proof with much
          smaller programs.
        title: The time
      - type: ordered_item
        Title: "This is "
        body: Our approach to building this sequencer is the same approach that guided
          us in StarkNet Alpha. The sequencer **will be implemented in stages**,
          and we are sharing today its first module. Over time, new components
          of the sequencer will be completed, until eventually a Rust-based
          sequencer will replace the current Python-based sequencer entirely.
        title: A place
